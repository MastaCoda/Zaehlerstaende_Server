{
 "kind": "discovery#rpcDescription",
 "etag": "\"s1omim4x8ymp9_6H8kBMkfEDqpo/mLvAp4a5I428SCSSlXuSQymGj0g\"",
 "discoveryVersion": "v1",
 "id": "userendpoint:v1",
 "name": "userendpoint",
 "version": "v1",
 "description": "This is an API",
 "ownerDomain": "roman.de",
 "ownerName": "roman.de",
 "packagePath": "meter",
 "icons": {
  "x16": "http://www.google.com/images/icons/product/search-16.gif",
  "x32": "http://www.google.com/images/icons/product/search-32.gif"
 },
 "protocol": "rpc",
 "rootUrl": "https://metertracker.appspot.com/_ah/api/",
 "rpcUrl": "https://metertracker.appspot.com/_ah/api/rpc",
 "rpcPath": "/_ah/api/rpc",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "schemas": {
  "CollectionResponse_User": {
   "id": "CollectionResponse_User",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "User"
     }
    },
    "nextPageToken": {
     "type": "string"
    }
   }
  },
  "Key": {
   "id": "Key",
   "type": "object",
   "properties": {
    "appId": {
     "type": "string"
    },
    "complete": {
     "type": "boolean"
    },
    "id": {
     "type": "string",
     "format": "int64"
    },
    "kind": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "namespace": {
     "type": "string"
    },
    "parent": {
     "$ref": "Key"
    }
   }
  },
  "Meter": {
   "id": "Meter",
   "type": "object",
   "properties": {
    "description": {
     "type": "string"
    },
    "key": {
     "$ref": "Key"
    },
    "lastCount": {
     "type": "number",
     "format": "float"
    },
    "lastCountDate": {
     "type": "string",
     "format": "date-time"
    },
    "metercounts": {
     "type": "array",
     "items": {
      "$ref": "MeterCount"
     }
    },
    "name": {
     "type": "string"
    },
    "type": {
     "$ref": "MeterTypes"
    },
    "unit": {
     "$ref": "Units"
    },
    "user": {
     "$ref": "User"
    }
   }
  },
  "MeterCollection": {
   "id": "MeterCollection",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "Meter"
     }
    }
   }
  },
  "MeterCount": {
   "id": "MeterCount",
   "type": "object",
   "properties": {
    "date": {
     "type": "string",
     "format": "date-time"
    },
    "key": {
     "$ref": "Key"
    },
    "meter": {
     "$ref": "Meter"
    },
    "value": {
     "type": "number",
     "format": "float"
    }
   }
  },
  "MeterTypes": {
   "id": "MeterTypes",
   "type": "string",
   "enum": [
    "Gas",
    "Strom",
    "Wasser",
    "Öl"
   ],
   "enumDescriptions": [
    "",
    "",
    "",
    ""
   ]
  },
  "Units": {
   "id": "Units",
   "type": "string",
   "enum": [
    "kWh",
    "l",
    "m3"
   ],
   "enumDescriptions": [
    "",
    "",
    ""
   ]
  },
  "User": {
   "id": "User",
   "type": "object",
   "properties": {
    "email": {
     "type": "string"
    },
    "id": {
     "$ref": "Key"
    },
    "meters": {
     "type": "array",
     "items": {
      "$ref": "Meter"
     }
    }
   }
  }
 },
 "methods": {
  "userendpoint.getMeterListWithUserId": {
   "id": "userendpoint.getMeterListWithUserId",
   "allowGet": true,
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "format": "int64"
    }
   },
   "parameterOrder": [
    "id"
   ],
   "returns": {
    "$ref": "MeterCollection"
   }
  },
  "userendpoint.getUser": {
   "id": "userendpoint.getUser",
   "allowGet": true,
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "format": "int64"
    }
   },
   "parameterOrder": [
    "id"
   ],
   "returns": {
    "$ref": "User"
   }
  },
  "userendpoint.getUserByEmail": {
   "id": "userendpoint.getUserByEmail",
   "allowGet": true,
   "parameters": {
    "email": {
     "type": "string",
     "required": true
    }
   },
   "parameterOrder": [
    "email"
   ],
   "returns": {
    "$ref": "User"
   }
  },
  "userendpoint.insertMeterToUser": {
   "id": "userendpoint.insertMeterToUser",
   "parameters": {
    "MeterDesc": {
     "type": "string",
     "required": true
    },
    "MeterName": {
     "type": "string",
     "required": true
    },
    "MeterType": {
     "type": "string",
     "required": true,
     "enum": [
      "Gas",
      "Strom",
      "Wasser",
      "Öl"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    },
    "MeterUnit": {
     "type": "string",
     "required": true,
     "enum": [
      "kWh",
      "l",
      "m3"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    },
    "UserId": {
     "type": "string",
     "required": true,
     "format": "int64"
    }
   },
   "parameterOrder": [
    "MeterDesc",
    "MeterName",
    "MeterType",
    "MeterUnit",
    "UserId"
   ],
   "returns": {
    "$ref": "Meter"
   }
  },
  "userendpoint.insertUser": {
   "id": "userendpoint.insertUser",
   "parameters": {
    "resource": {
     "$ref": "User"
    }
   },
   "parameterOrder": [
    "resource"
   ],
   "returns": {
    "$ref": "User"
   }
  },
  "userendpoint.listUser": {
   "id": "userendpoint.listUser",
   "allowGet": true,
   "parameters": {
    "cursor": {
     "type": "string"
    },
    "limit": {
     "type": "integer",
     "format": "int32"
    }
   },
   "returns": {
    "$ref": "CollectionResponse_User"
   }
  },
  "userendpoint.removeUser": {
   "id": "userendpoint.removeUser",
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "format": "int64"
    }
   },
   "parameterOrder": [
    "id"
   ],
   "returns": {
    "$ref": "User"
   }
  },
  "userendpoint.updateUser": {
   "id": "userendpoint.updateUser",
   "parameters": {
    "resource": {
     "$ref": "User"
    }
   },
   "parameterOrder": [
    "resource"
   ],
   "returns": {
    "$ref": "User"
   }
  }
 }
}
